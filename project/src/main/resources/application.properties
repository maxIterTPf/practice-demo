#访问端口号
server.port=8091
#编码格式
server.tomcat.uri-encoding=utf-8
#数据库相关配置
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/learning?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=tianpengfei123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#配置最大连接池数
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
#配置最小连接池数
spring.datasource.min-idle=5
#初始化连接池大小
spring.datasource.initial-size=5


#JPA Configuration:
spring.jpa.database=MySQL
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy


#session生命周期
server.servlet.session.timeout=30m
#### 以上配置也可以不配置，但是需要在启动类头部声明
#### @SpringBootApplication(exclude= {DataSourceAutoConfiguration.class})


##数据源的定义，如果是oracle需要做相应的修改
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/jpa?characterEncoding=utf8&useUnicode=true
#spring.datasource.username=root
##密码是自己的数据库密码
#spring.datasource.password=tianpengfei123
##指定Data (DML)脚本
##spring.datasource.schema=classpath:schema.sql
##指定Data (DDL)脚本,似乎没有起作用，等查
#spring.datasource.data=classpath:data.sql
#spring.datasource.sql-script-encoding=utf-8
##jpa配置
##reate:启动时删除上一次生成的表，并根据实体类生成表，表中数据会被清空
##create-drop:启动时根据实体类生成表，sessionFactory关闭时表会被删除
##update:启动时会根据实体类生成表，当实体类属性变动时，表结构也会更新，开发初期使用
##validate:启动时验证实体类与数据表是否一致，在数据稳定时使用此选项
##none:什么了也不做
#
##ddl-auto=update没有表，会新建表但是表内有数据不会被清空，只会更新表结构
#spring.jpa.hibernate.ddl-auto=update
##控制台输出执行的sql语句
#spring.jpa.show-sql=true
##使用json格式的数据显示更美观
#spring.jackson.serialization.indent-output=true
## 是否生成ddl语句
#spring.jpa.generate-ddl=true

